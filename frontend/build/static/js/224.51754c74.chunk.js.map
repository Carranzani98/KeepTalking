{"version":3,"file":"static/js/224.51754c74.chunk.js","mappings":"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","sources":["components/CommonInitialText/CommonInitialText.tsx","views/Register/components/RegisterForm.tsx","views/Register/Register.tsx"],"sourcesContent":["import React from 'react'\n\nimport {\n  Anchor,\n  Box,\n  Title,\n  Text,\n  Stack,\n  Image,\n  MediaQuery,\n} from '@mantine/core'\n\ninterface CommonInitialTextProps {\n  view: string\n  title: string\n  text: string\n  anchorText: string\n}\nconst CommonInitialText = ({\n  view,\n  title,\n  text,\n  anchorText,\n}: CommonInitialTextProps) => {\n  return (\n    <Stack pt={20} sx={{ alignItems: 'center' }} spacing=\"xs\">\n      <Box>\n        <Title size={50}>{title} to</Title>\n        <Title size={35} weight=\"normal\" mt=\"xs\">\n          KeepTalking\n        </Title>\n        <Text size=\"lg\" mt=\"xl\">\n          {text}\n        </Text>\n        <Text size=\"lg\">\n          You can{' '}\n          <Anchor\n            color=\"red.9\"\n            href={view === 'register' ? '/login' : '/register'}\n          >\n            {anchorText}\n          </Anchor>\n        </Text>\n      </Box>\n      <MediaQuery smallerThan=\"sm\" styles={{ display: 'none' }}>\n        <Image\n          mt=\"xl\"\n          src=\"images/auth-ilustration.png\"\n          alt=\"Girl chatting with her phone\"\n          fit=\"contain\"\n          width={450}\n          height={255}\n          withPlaceholder\n        />\n      </MediaQuery>\n    </Stack>\n  )\n}\n\nexport default CommonInitialText\n","import React from 'react'\n\nimport { faCalendar } from '@fortawesome/free-regular-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  TextInput,\n  PasswordInput,\n  Group,\n  Button,\n  Stack,\n  Select,\n  MultiSelect,\n  Textarea,\n  Box,\n  SelectItem,\n  MediaQuery,\n} from '@mantine/core'\nimport { DatePicker } from '@mantine/dates'\nimport { useForm } from '@mantine/form'\nimport { useMutation } from '@tanstack/react-query'\n\nimport Countries from '../../../components/Countries/Countries'\nimport Languages from '../../../components/Languages/Languages'\nimport { postRegister } from '../../../services/api/models/auth/AuthApi'\nimport { RegisterFormValues } from '../../../services/api/types/User'\nimport {\n  inputsStyles,\n  mainAuthColor,\n  multiSelect,\n  passwordStyles,\n} from '../../../utils/AuthStyles'\nimport { formatDate } from '../../../utils/DateFormat'\n\nconst RegisterForm = () => {\n  const registerMutation = useMutation(postRegister)\n\n  const form = useForm({\n    initialValues: {\n      email: '',\n      name: '',\n      surname: '',\n      birthday: '',\n      country: '',\n      password: '',\n      confirmPassword: '',\n      languages_to_teach: [''],\n      languages_to_learn: [''],\n      description: '',\n    },\n\n    validate: {\n      email: val =>\n        /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(val) ? null : 'Invalid email',\n\n      name: val =>\n        val.length < 2 ? 'Name must have at least 2 characters' : null,\n      surname: val =>\n        val.length < 2 ? 'Name must have at least 2 characters' : null,\n\n      password: val =>\n        val.length >= 6\n          ? null\n          : 'Password should include at least 6 characters',\n      confirmPassword: (val, values) =>\n        val !== values.password ? 'Passwords did not match' : null,\n\n      languages_to_teach: val =>\n        val.length === 0 ? 'At least one language must be selected' : null,\n\n      languages_to_learn: val =>\n        val.length === 0 ? 'At least one language must be selected' : null,\n    },\n  })\n  const languages = Languages()\n\n  const getLanguagesData = () => {\n    if (languages.data) {\n      return languages.data.data.map(language => ({\n        label: language.language_name,\n        value: language.id,\n      })) as SelectItem[]\n    } else {\n      return []\n    }\n  }\n  const handleSubmit = (formValues: RegisterFormValues) => {\n    registerMutation.mutate(formValues, {\n      onSuccess: () => (location.href = '/login'),\n      onError: error => alert(error),\n    })\n  }\n\n  return (\n    <MediaQuery largerThan=\"xl\" styles={{ marginRight: 50 }}>\n      <Box sx={{ width: 550 }}>\n        <form\n          onSubmit={form.onSubmit(values => {\n            handleSubmit(values)\n          })}\n        >\n          <MediaQuery smallerThan=\"xs\" styles={{ flexDirection: 'column' }}>\n            <Group grow position=\"apart\" align=\"flex-start\">\n              <MediaQuery\n                smallerThan=\"xs\"\n                styles={{ maxWidth: '100%', width: '100%' }}\n              >\n                <Stack>\n                  <TextInput\n                    size=\"lg\"\n                    variant=\"filled\"\n                    styles={inputsStyles}\n                    required\n                    placeholder=\"Enter your email\"\n                    value={form.values.email}\n                    onChange={event =>\n                      form.setFieldValue('email', event.currentTarget.value)\n                    }\n                    error={form.errors.email && 'Invalid email'}\n                  />\n                  <TextInput\n                    size=\"lg\"\n                    variant=\"filled\"\n                    styles={inputsStyles}\n                    required\n                    placeholder=\"Name\"\n                    value={form.values.name}\n                    onChange={event =>\n                      form.setFieldValue('name', event.currentTarget.value)\n                    }\n                    error={form.errors.name}\n                  />\n                  <TextInput\n                    size=\"lg\"\n                    variant=\"filled\"\n                    styles={inputsStyles}\n                    required\n                    placeholder=\"Surname\"\n                    value={form.values.surname}\n                    onChange={event =>\n                      form.setFieldValue('surname', event.currentTarget.value)\n                    }\n                    error={form.errors.surname}\n                  />\n                  <DatePicker\n                    size=\"lg\"\n                    required\n                    placeholder=\"Birthday\"\n                    inputFormat=\"MM/DD/YYYY\"\n                    labelFormat=\"MM/YYYY\"\n                    styles={inputsStyles}\n                    allowFreeInput\n                    rightSection={\n                      <FontAwesomeIcon\n                        color={mainAuthColor}\n                        icon={faCalendar}\n                      />\n                    }\n                    onChange={(value: Date) =>\n                      form.setFieldValue('birthday', formatDate(value))\n                    }\n                  />\n\n                  <PasswordInput\n                    size=\"lg\"\n                    variant=\"filled\"\n                    styles={{\n                      ...passwordStyles,\n                      ...inputsStyles,\n                    }}\n                    required\n                    placeholder=\"Password\"\n                    value={form.values.password}\n                    onChange={event =>\n                      form.setFieldValue('password', event.currentTarget.value)\n                    }\n                    error={\n                      form.errors.password &&\n                      'Password should include at least 6 characters'\n                    }\n                  />\n                  <PasswordInput\n                    size=\"lg\"\n                    variant=\"filled\"\n                    styles={{\n                      ...passwordStyles,\n                      ...inputsStyles,\n                    }}\n                    required\n                    placeholder=\"Confirm password\"\n                    value={form.values.confirmPassword}\n                    onChange={event =>\n                      form.setFieldValue(\n                        'confirmPassword',\n                        event.currentTarget.value\n                      )\n                    }\n                    error={form.errors.password || form.errors.confirmPassword}\n                  />\n                </Stack>\n              </MediaQuery>\n              <MediaQuery\n                smallerThan=\"xs\"\n                styles={{ maxWidth: '100%', width: '100%' }}\n              >\n                <Stack>\n                  <Select\n                    size=\"lg\"\n                    required\n                    placeholder=\"Country\"\n                    value={form.values.country}\n                    data={Countries()}\n                    styles={{\n                      item: {\n                        fontSize: 14,\n                        padding: 8,\n                      },\n                      ...inputsStyles,\n                    }}\n                    allowDeselect\n                    clearable\n                    searchable\n                    onChange={(value: string) =>\n                      form.setFieldValue('country', value)\n                    }\n                  />\n                  <MultiSelect\n                    styles={multiSelect}\n                    size=\"lg\"\n                    maxSelectedValues={4}\n                    required\n                    data={getLanguagesData()}\n                    placeholder=\"Languages you speak (max 4)\"\n                    searchable\n                    clearable\n                    value={form.values.languages_to_teach}\n                    onChange={value =>\n                      form.setFieldValue('languages_to_teach', value)\n                    }\n                    error={form.errors.languages_to_teach}\n                  />\n                  <MultiSelect\n                    size=\"lg\"\n                    styles={multiSelect}\n                    maxSelectedValues={4}\n                    required\n                    data={getLanguagesData()}\n                    placeholder=\"Languages to learn (max 4)\"\n                    searchable\n                    clearable\n                    value={form.values.languages_to_learn}\n                    onChange={value =>\n                      form.setFieldValue('languages_to_learn', value)\n                    }\n                    error={form.errors.languages_to_learn}\n                  />\n\n                  <Textarea\n                    variant=\"filled\"\n                    styles={{\n                      ...{ input: { ...inputsStyles.input, height: 116 } },\n                    }}\n                    placeholder=\"Description\"\n                    required\n                    onChange={event =>\n                      form.setFieldValue('description', event.target.value)\n                    }\n                  />\n                </Stack>\n              </MediaQuery>\n            </Group>\n          </MediaQuery>\n\n          <Button\n            mt=\"xl\"\n            type=\"submit\"\n            color=\"red.8\"\n            fullWidth\n            loading={registerMutation.isLoading}\n            sx={{\n              filter: 'drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25))',\n              height: 50,\n            }}\n          >\n            Register\n          </Button>\n        </form>\n      </Box>\n    </MediaQuery>\n  )\n}\n\nexport default RegisterForm\n","import React from 'react'\n\nimport { Box, Group } from '@mantine/core'\n\nimport CommonInitialText from '../../components/CommonInitialText/CommonInitialText'\nimport RegisterForm from './components/RegisterForm'\n\nconst Register = () => {\n  return (\n    <Box px=\"lg\" pt=\"12\" pb={0} sx={{ height: '100%' }}>\n      <Group\n        align=\"center\"\n        sx={{ justifyContent: 'space-around', height: '100%' }}\n      >\n        <Box p={20}>\n          <CommonInitialText\n            view=\"register\"\n            title=\"Sign up\"\n            text=\"If you already have an aacount\"\n            anchorText=\"Login here!\"\n          />\n        </Box>\n\n        <RegisterForm />\n      </Group>\n    </Box>\n  )\n}\n\nexport default Register\n"],"names":["view","title","text","anchorText","pt","sx","alignItems","spacing","size","weight","mt","color","href","smallerThan","styles","display","src","alt","fit","width","height","withPlaceholder","registerMutation","useMutation","postRegister","form","useForm","initialValues","email","name","surname","birthday","country","password","confirmPassword","languages_to_teach","languages_to_learn","description","validate","val","test","length","values","languages","Languages","getLanguagesData","data","map","language","label","language_name","value","id","MediaQuery","largerThan","marginRight","Box","onSubmit","formValues","mutate","onSuccess","location","onError","error","alert","flexDirection","Group","grow","position","align","maxWidth","Stack","TextInput","variant","inputsStyles","required","placeholder","onChange","event","setFieldValue","currentTarget","errors","DatePicker","inputFormat","labelFormat","allowFreeInput","rightSection","mainAuthColor","icon","faCalendar","formatDate","PasswordInput","passwordStyles","Select","Countries","item","fontSize","padding","allowDeselect","clearable","searchable","MultiSelect","multiSelect","maxSelectedValues","Textarea","input","target","Button","type","fullWidth","loading","isLoading","filter","px","pb","justifyContent","p","CommonInitialText"],"sourceRoot":""}