{"version":3,"file":"static/js/892.1e143c91.chunk.js","mappings":"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","sources":["components/CommonInitialText/CommonInitialText.tsx","views/Login/components/LoginForm.tsx","views/Login/Login.tsx"],"sourcesContent":["import React from 'react'\n\nimport {\n  Anchor,\n  Box,\n  Title,\n  Text,\n  Stack,\n  Image,\n  MediaQuery,\n} from '@mantine/core'\n\ninterface CommonInitialTextProps {\n  view: string\n  title: string\n  text: string\n  anchorText: string\n}\nconst CommonInitialText = ({\n  view,\n  title,\n  text,\n  anchorText,\n}: CommonInitialTextProps) => {\n  return (\n    <Stack pt={20} sx={{ alignItems: 'center' }} spacing=\"xs\">\n      <Box>\n        <Title size={50}>{title} to</Title>\n        <Title size={35} weight=\"normal\" mt=\"xs\">\n          KeepTalking\n        </Title>\n        <Text size=\"lg\" mt=\"xl\">\n          {text}\n        </Text>\n        <Text size=\"lg\">\n          You can{' '}\n          <Anchor\n            color=\"red.9\"\n            href={view === 'register' ? '/login' : '/register'}\n          >\n            {anchorText}\n          </Anchor>\n        </Text>\n      </Box>\n      <MediaQuery smallerThan=\"sm\" styles={{ display: 'none' }}>\n        <Image\n          mt=\"xl\"\n          src=\"images/auth-ilustration.png\"\n          alt=\"Girl chatting with her phone\"\n          fit=\"contain\"\n          width={450}\n          height={255}\n          withPlaceholder\n        />\n      </MediaQuery>\n    </Stack>\n  )\n}\n\nexport default CommonInitialText\n","import React, { useState } from 'react'\n\nimport {\n  Text,\n  TextInput,\n  PasswordInput,\n  Button,\n  Stack,\n  Anchor,\n  Box,\n} from '@mantine/core'\nimport { useForm } from '@mantine/form'\nimport { useSessionStorage } from '@mantine/hooks'\nimport { useMutation } from '@tanstack/react-query'\n\nimport postLogin from '../../../services/api/models/auth/AuthApi'\nimport { inputsStyles, passwordStyles } from '../../../utils/AuthStyles'\n\ninterface LoginFormValues {\n  email: string\n  password: string\n}\n\nconst LoginForm = () => {\n  const [error, setError] = useState<boolean>(false)\n  const loginMutation = useMutation(postLogin)\n  const [_, setToken] = useSessionStorage<string>({\n    key: 'token',\n  })\n\n  const form = useForm({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n\n    validate: {\n      email: val =>\n        /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(val) ? null : 'Invalid email',\n      password: val =>\n        val.length >= 6\n          ? null\n          : 'Password should include at least 6 characters',\n    },\n  })\n\n  const handleSubmit = (formValues: LoginFormValues) => {\n    loginMutation.mutate(formValues, {\n      onSuccess: response => {\n        setToken(response.accessToken)\n        location.href = '/MainPage'\n      },\n      onError: () => {\n        setError(true)\n      },\n    })\n  }\n\n  return (\n    <Box sx={{ width: 369 }}>\n      <form onSubmit={form.onSubmit(values => handleSubmit(values))}>\n        {error && (\n          <Text size=\"md\" color=\"red\" pb=\"xs\">\n            Your email or password is not correct\n          </Text>\n        )}\n        <Stack>\n          <TextInput\n            size=\"lg\"\n            variant=\"filled\"\n            styles={inputsStyles}\n            required\n            placeholder=\"Enter your email\"\n            value={form.values.email}\n            onChange={event => {\n              setError(false)\n              form.setFieldValue('email', event.currentTarget.value)\n            }}\n            error={form.errors.email && 'Invalid email'}\n          />\n\n          <PasswordInput\n            size=\"lg\"\n            variant=\"filled\"\n            styles={{\n              ...passwordStyles,\n              ...inputsStyles,\n            }}\n            required\n            placeholder=\"Enter your password\"\n            value={form.values.password}\n            onChange={event => {\n              setError(false)\n              form.setFieldValue('password', event.currentTarget.value)\n            }}\n            error={\n              form.errors.password &&\n              'Password should include at least 6 characters'\n            }\n          />\n          <Anchor color=\"gray.5\" size=\"sm\" sx={{ textAlign: 'right' }}>\n            Forgot password?\n          </Anchor>\n        </Stack>\n\n        <Button\n          mt=\"xl\"\n          type=\"submit\"\n          fullWidth\n          loading={loginMutation.isLoading}\n          color=\"red.8\"\n          sx={{\n            filter: 'drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25))',\n            height: 50,\n          }}\n        >\n          Login\n        </Button>\n      </form>\n    </Box>\n  )\n}\n\nexport default LoginForm\n","import React from 'react'\n\nimport { Box, Group, MediaQuery } from '@mantine/core'\n\nimport CommonInitialText from '../../components/CommonInitialText/CommonInitialText'\nimport LoginForm from './components/LoginForm'\n\nconst Login = () => {\n  return (\n    <Box px=\"lg\" pt=\"12\" pb={0} sx={{ height: '100%' }}>\n      <MediaQuery largerThan=\"sm\" styles={{ gap: 20 }}>\n        <Group\n          p={20}\n          align=\"center\"\n          sx={{ justifyContent: 'space-around', height: '100%' }}\n        >\n          <CommonInitialText\n            view=\"login\"\n            title=\"Sign in\"\n            text=\"If you don't have an account register\"\n            anchorText=\"Register here!\"\n          />\n          <LoginForm />\n        </Group>\n      </MediaQuery>\n    </Box>\n  )\n}\n\nexport default Login\n"],"names":["view","title","text","anchorText","pt","sx","alignItems","spacing","size","weight","mt","color","href","smallerThan","styles","display","src","alt","fit","width","height","withPlaceholder","useState","error","setError","loginMutation","useMutation","postLogin","useSessionStorage","key","setToken","form","useForm","initialValues","email","password","validate","val","test","length","Box","onSubmit","values","formValues","mutate","onSuccess","response","accessToken","location","onError","Text","pb","Stack","TextInput","variant","inputsStyles","required","placeholder","value","onChange","event","setFieldValue","currentTarget","errors","PasswordInput","passwordStyles","Anchor","textAlign","Button","type","fullWidth","loading","isLoading","filter","px","MediaQuery","largerThan","gap","Group","p","align","justifyContent","CommonInitialText"],"sourceRoot":""}